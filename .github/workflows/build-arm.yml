name: Build ARM

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-20.04]
        build-type: [Debug, Release]

    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: ${{ matrix.build-type }}
      CMAKE_BUILD_PARALLEL_LEVEL: 2
      
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Set env
      run: echo "REPO_TAG=$(git describe --tags --always)" >> $GITHUB_ENV
      shell: bash

    - name: get-cmake
       uses: lukka/get-cmake@v3.23.0
       
    - if: runner.os == 'Windows'
      name: Install boost
      run: |
          $Url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.73.0/boost_1_73_0-msvc-14.2-64.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
          Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=C:\\hostedtoolcache\\windows\\Boost"

    - if: runner.os == 'Windows'
      name: Set boost env
      run: echo "BOOST_ROOT=C:\\hostedtoolcache\windows\\Boost" >> $GITHUB_ENV
      shell: bash

    - if: runner.os == 'Windows'
      name: Install openssl
      run: choco install openssl --forcex86 | out-null
      
    - if: runner.os == 'Windows'
      name: Setup openssl envvar
      run: echo "OPENSSL_ROOT=C:\\Program Files (x86)\\OpenSSL-Win32" >> $GITHUB_ENV
      
    - name: Get python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.0 # SemVer's version range syntax
 
    - name: Run ARM build
      uses: pguyot/arm-runner-action@v2.5.2
      with:
        base_image: ${{ matrix.arch == 'arm32' && 'raspios_lite' || 'raspios_lite_arm64' }}:2022-04-04
        image_additional_mb: 10000
        bind_mount_repository: true
        cpu: cortex-a7
        commands: |
            apt update && apt install -y git gcc-11 g++-11 libstdc++-11-dev
            python -m pip install --upgrade pip
            pip install conan==1.57.0
            conan remote add conan-transit-legacy https://api.bintray.com/conan/conan/conan-transit
            mkdir -p docker/conan/data
            mkdir ~/.conan
            mv docker/conan/data ~/.conan
            mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DDCC_VERSION="${{ env.REPO_TAG }}" -DBOOST_ROOT=${{ env.BOOST_ROOT }} -DOPENSSL_ROOT=${{ env.OPENSSL_ROOT }}
            cmake --build .
            mv ~/.conan/data docker/conan

    - name: Zip artifact
      run: Compress-Archive ${{ runner.workspace }}/samp-discord-connector/build/artifact/* ${{ runner.workspace }}/samp-discord-connector/build/artifact/discord-connector-${{ env.REPO_TAG }}-${{ runner.os }}-${{ matrix.build-type }}.zip
      shell: pwsh
      
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: discord-connector-${{ env.REPO_TAG }}-${{ runner.os }}-${{ matrix.build-type }}
        path: ${{ runner.workspace }}/samp-discord-connector/build/artifact/discord-connector-${{ env.REPO_TAG }}-${{ runner.os }}-${{ matrix.build-type }}.zi
